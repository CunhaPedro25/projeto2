create table if not exists admin
(
    id integer generated by default as identity,
    name varchar(70),
    email varchar(254) not null,
    password varchar not null,
    phone integer not null,
    active boolean default true,
    constraint admin_pk
    primary key (id),
    constraint admin_pk_3
    unique (phone),
    constraint admin_pk_2
    unique (email)
    );

create table if not exists engineer
(
    id integer generated always as identity,
    name varchar(70),
    email varchar(254) not null,
    password varchar not null,
    phone integer not null,
    active boolean default true,
    constraint engineer_pk
    primary key (id),
    constraint engineer_pk_2
    unique (email),
    constraint engineer_pk_3
    unique (phone)
    );

create table if not exists worker
(
    id integer generated by default as identity,
    name varchar(70),
    email varchar(254) not null,
    password varchar not null,
    phone integer not null,
    team integer,
    active boolean default true,
    constraint worker_pk
    primary key (id),
    constraint worker_pk_2
    unique (email),
    constraint worker_pk_3
    unique (phone)
    );

create table if not exists team
(
    id integer generated by default as identity,
    busy boolean default false,
    leader integer not null,
    constraint team_pk
    primary key (id),
    constraint team_worker_id_fk
    foreign key (leader) references worker
    );

alter table worker
    add constraint worker_team_id_fk
        foreign key (team) references team;

create table if not exists state
(
    id integer generated by default as identity,
    description text,
    constraint state_pk
    primary key (id)
    );

create table if not exists material
(
    id integer generated by default as identity,
    value_unit numeric not null,
    quantity integer not null,
    constraint material_pk
    primary key (id)
    );

create table if not exists client_type
(
    id integer generated by default as identity,
    type varchar not null,
    constraint client_type_pk
    primary key (id)
    );

create table if not exists zipcode
(
    zipcode varchar not null,
    district varchar not null,
    city varchar not null,
    locale varchar not null,
    constraint zipcode_pk
    primary key (zipcode)
    );

create table if not exists client
(
    id integer generated by default as identity,
    name varchar(70),
    email varchar(254) not null,
    password varchar not null,
    phone varchar not null,
    address text,
    door integer,
    zipcode varchar,
    client_type integer not null,
    active boolean default true,
    constraint client_pk
    primary key (id),
    constraint client_pk_2
    unique (email),
    constraint client_pk_3
    unique (phone),
    constraint client_client_type_id_fk
    foreign key (client_type) references client_type,
    constraint client_zipcode_zipcode_fk
    foreign key (zipcode) references zipcode
    );

create table if not exists project
(
    id integer generated by default as identity,
    client integer not null,
    engineer integer not null,
    file_path varchar,
    create_date date default CURRENT_DATE,
    accepted boolean,
    constraint projects_pk
    primary key (id),
    constraint projects_client_id_fk
    foreign key (client) references client,
    constraint projects_engineer_id_fk
    foreign key (engineer) references engineer
    );

create table if not exists budget
(
    id integer generated by default as identity,
    client integer not null,
    engineer integer not null,
    file_path varchar,
    create_date date default CURRENT_DATE,
    accepted boolean,
    project integer not null,
    constraint budget_pk
    primary key (id),
    constraint budget_client_id_fk
    foreign key (client) references client,
    constraint budget_engineer_id_fk
    foreign key (engineer) references engineer,
    constraint budget_project_id_fk
    foreign key (project) references project
    );

create table if not exists stage
(
    id integer generated by default as identity,
    budget integer not null,
    state integer not null,
    description text,
    constraint stage_pk
    primary key (id),
    constraint stage_budget_id_fk
    foreign key (budget) references budget,
    constraint stage_state_id_fk
    foreign key (state) references state
    );

create table if not exists construction
(
    id integer generated by default as identity,
    team integer,
    budget integer,
    stage integer,
    finished boolean default false,
    last_update date,
    start_date date,
    constraint construction_pk
    primary key (id),
    constraint construction_budget_id_fk
    foreign key (budget) references budget,
    constraint construction_stage_id_fk
    foreign key (stage) references stage,
    constraint construction_team_id_fk
    foreign key (team) references team
    );

create table if not exists stage_material
(
    stage integer not null,
    material integer not null,
    quantity integer not null,
    constraint stage_material_pk
    primary key (material, stage),
    constraint stage_material_stage_id_fk
    foreign key (stage) references stage,
    constraint stage_material_material_id_fk
    foreign key (material) references material
    );

create table if not exists complaint
(
    id integer generated by default as identity,
    client integer not null,
    construction integer not null,
    description text not null,
    constraint complaint_pk
    primary key (id),
    constraint complaint_client_id_fk
    foreign key (client) references client,
    constraint complaint_construction_id_fk
    foreign key (construction) references construction
    );

create table if not exists invoice
(
    id integer generated by default as identity,
    stage integer not null,
    total numeric not null,
    client integer not null,
    issue_date date default CURRENT_DATE,
    paid boolean default false,
    constraint invoice_pk
    primary key (id),
    constraint invoice_stage_id_fk
    foreign key (stage) references stage,
    constraint invoice_client_id_fk
    foreign key (client) references client
    );
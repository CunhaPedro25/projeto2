create table state
(
    id integer generated by default as identity
        constraint state_pk
            primary key,
    description text
);

create table construction_type
(
    id integer generated by default as identity
        constraint construction_type_pk
            primary key,
    type varchar
);

create table material
(
    id integer generated by default as identity
        constraint material_pk
            primary key,
    name varchar not null,
    value_unit decimal not null,
    quantity integer not null
);

create table user_type
(
    id integer generated by default as identity
        constraint client_type_pk
            primary key,
    type varchar not null
);

create table zipcode
(
    id varchar not null
        constraint zipcode_pk
            primary key,
    district varchar not null,
    city varchar not null,
    locale varchar not null
);

create table "user"
(
    id integer generated by default as identity
        constraint client_pk
            primary key,
    name varchar(70),
    email varchar(254) not null
        constraint email_uk
            unique,
    password varchar not null,
    phone varchar not null
        constraint phone_uk
            unique,
    address text,
    door integer,
    zipcode varchar
        constraint client_zipcode_zipcode_fk
            references zipcode,
    user_type integer not null
        constraint user_type_fk
            references user_type,
    team integer null,
    active boolean default true
);

create table team
(
    id integer generated by default as identity
        constraint team_pk
            primary key,
    busy boolean default false,
    leader integer null
        constraint leader_id_fk
            references "user",
    daily_value decimal not null
);

alter table "user"
    add constraint team_id_fk
        foreign key (team) references team;

create table project
(
    id integer generated by default as identity
        constraint projects_pk
            primary key,
    client integer not null
        constraint client_id_fk
            references "user",
    engineer integer not null
        constraint engineer_id_fk
            references "user",
    construction_type integer not null
        constraint construction_type_fk
            references construction_type,
    requirements_create_date date null,
    budget_create_date date null,
    requirements_document varchar null,
    budget_document varchar null,
    budget decimal null,
    requirements_state bool null,
    budget_state bool null
);

create table stage
(
    id integer generated by default as identity
        constraint stage_pk
            primary key,
    name varchar,
    percentage float,
    construction_type integer not null
        constraint construction_type_fk
            references construction_type
);

create table if not exists construction
(
    id integer generated by default as identity
        constraint construction_pk
            primary key,
    project integer not null
        constraint project_id_fk
            references project,
    stage integer
        constraint stage_id_fk
            references stage,
    name varchar,
    stage_budget decimal,
    total decimal,
    state integer
        constraint state_id_fk
            references state,
    last_update timestamp default CURRENT_TIMESTAMP
);


create table construction_material
(
    construction integer not null
        constraint construction_id_fk
            references construction,
    material integer not null
        constraint material_id_fk
            references material,
    quantity integer not null,
    constraint construction_material_pk
        primary key (material, construction)
);

create table if not exists construction_team
(
    id integer generated by default as identity
        constraint construction_team_pk
            primary key,
    team integer
        constraint team_id_fk
            references team,
    construction integer
        constraint construction_id_fk
            references construction,
    start_date date,
    end_date date,
    days integer,
    daily_value decimal
);

create table complaint
(
    id integer generated by default as identity
        constraint complaint_pk
            primary key,
    client integer not null
        constraint client_id_fk
            references "user",
    construction integer not null
        constraint construction_id_fk
            references construction,
    description text not null
);

create table invoice
(
    id integer generated by default as identity
        constraint invoice_pk
            primary key,
    stage integer not null
        constraint invoice_stage_id_fk
            references stage,
    client integer not null
        constraint client_id_fk
            references "user",
    stage_total decimal,
    budget_total decimal,
    percentage float,
    issue_date date default CURRENT_DATE,
    paid boolean default false
);


create function calculate_days() returns trigger
    language plpgsql
as
$$
declare team_record record;
    declare construction_team_record record;
begin
    select * into team_record
    from team
    where id = new.team;

    update construction_team
    set days = new.end_date - new.start_date,
        daily_value = team_record.daily_value
    where id = new.id;

    select * into construction_team_record
    from construction_team
    where id = new.id;

    update construction
    set total = total + team_record.daily_value * construction_team_record.days
    where id = construction_team_record.construction;

    return new;
end;
$$;

alter function calculate_days() owner to postgres;

create function create_invoices() returns trigger
    language plpgsql
as
$$
DECLARE
    stage_row RECORD;
BEGIN
    FOR stage_row IN
        SELECT id, percentage
        FROM stage
        WHERE construction_type = NEW.construction_type
        LOOP
            INSERT INTO invoice (stage, client, stage_total, budget_total, percentage, issue_date, paid)
            VALUES (stage_row.id, NEW.client, NEW.budget * stage_row.percentage, NEW.budget, stage_row.percentage, CURRENT_DATE, FALSE);
        END LOOP;

    RETURN NEW;
END;
$$;

alter function create_invoices() owner to postgres;


-- Insert dummy data for state
INSERT INTO state (description) VALUES
                                    ('Planning'),
                                    ('In Progress'),
                                    ('Completed'),
                                    ('On Hold');

-- Insert dummy data for construction_type
INSERT INTO construction_type (type) VALUES
                                         ('Residential'),
                                         ('Commercial'),
                                         ('Industrial');

-- Insert dummy data for material
INSERT INTO material (name, value_unit, quantity) VALUES
                                                      ('Concrete', 100.0, 500),
                                                      ('Steel', 150.0, 300),
                                                      ('Wood', 50.0, 1000);

-- Insert dummy data for user_type
INSERT INTO user_type (type) VALUES
                                 ('Client'),
                                 ('Engineer'),
                                 ('Secretary'),
                                 ('Admin');

-- Insert dummy data for zipcode
INSERT INTO zipcode (id, district, city, locale) VALUES
                                                     ('12345', 'District A', 'City A', 'Locale A'),
                                                     ('67890', 'District B', 'City B', 'Locale B');

-- Insert dummy data for team
INSERT INTO team (busy, leader, daily_value) VALUES
                                                 (FALSE, NULL, 500.0),
                                                 (FALSE, NULL, 600.0);

-- Insert dummy data for user
INSERT INTO "user" (name, email, password, phone, address, door, zipcode, user_type, team, active) VALUES
                                                                                                       ('John Doe', 'client@email.com', '948fe603f61dc036b5c596dc09fe3ce3f3d30dc90f024c85f3c82db2ccab679d', '123-456-7890', '123 Main St', 1, '12345', 1, NULL, TRUE),
                                                                                                       ('Jane Smith', 'engineer@email.com', '7826b958b79c70626801b880405eb5111557dadceb2fee2b1ed69a18eed0c6dc', '098-765-4321', '456 Elm St', 2, '67890', 2, NULL, TRUE),
                                                                                                       ('Maurice james', 'secretary@email.com', 'a8148532caf684760a38c6e5100fe4742cbe0c0030df36ad74a71abbad4d8369', '111-222-3332', '789 Oak St', 3, '12345', 3, NULL, TRUE),
                                                                                                       ('Admin User', 'admin@email.com', '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918', '111-222-3333', '789 Oak St', 4, '12345', 3, NULL, TRUE);

-- Update team with leader ids
UPDATE team SET leader = 2 WHERE id = 1;
UPDATE team SET leader = 2 WHERE id = 2;

-- Insert dummy data for project
INSERT INTO project (client, engineer, construction_type, requirements_create_date, budget_create_date, requirements_document, budget_document, budget, requirements_state, budget_state) VALUES
                                                                                                                                                                                              (1, 2, 1, '2023-01-01', '2023-02-01', 'req_doc_1.pdf', 'bud_doc_1.pdf', 10000.0, TRUE, TRUE),
                                                                                                                                                                                              (1, 2, 2, '2023-03-01', '2023-04-01', 'req_doc_2.pdf', 'bud_doc_2.pdf', 20000.0, TRUE, FALSE);

-- Insert dummy data for stage
INSERT INTO stage (name, percentage, construction_type) VALUES
                                                            ('Foundation', 20.0, 1),
                                                            ('Framing', 30.0, 1),
                                                            ('Plumbing', 50.0, 2);

-- Insert dummy data for construction
INSERT INTO construction (project, stage, stage_budget, total, state) VALUES
                                                                          (1, 1, 2000.0, 10000.0, 1),
                                                                          (2, 2, 3000.0, 20000.0, 2);

-- Insert dummy data for construction_material
INSERT INTO construction_material (construction, material, quantity) VALUES
                                                                         (1, 1, 100),
                                                                         (1, 2, 50),
                                                                         (2, 3, 200);

-- Insert dummy data for construction_team
INSERT INTO construction_team (team, construction, start_date, end_date, days, daily_value) VALUES
                                                                                                (1, 1, '2023-01-01', '2023-01-10', 10, 500.0),
                                                                                                (2, 2, '2023-03-01', '2023-03-20', 20, 600.0);

-- Insert dummy data for complaint
INSERT INTO complaint (client, construction, description) VALUES
                                                              (1, 1, 'Delay in construction.'),
                                                              (1, 2, 'Quality issues.');

-- Insert dummy data for invoice
INSERT INTO invoice (stage, client, stage_total, budget_total, percentage, issue_date, paid) VALUES
                                                                                                 (1, 1, 2000.0, 10000.0, 20.0, '2023-02-01', FALSE),
                                                                                                 (2, 1, 3000.0, 20000.0, 30.0, '2023-04-01', TRUE);